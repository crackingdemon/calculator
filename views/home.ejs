<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculator</title>
    <link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet">
</head>

<body>

    <h1 class="block text-center uppercase tracking-wide text-gray-700 mt-4 text-3xl font-bold mb-2">Payment</h1>
    <!-- This is an example component -->
    <div class="flex flex-wrap mt-10">
        <!-- Block 1 -->
        <div class='flex max-w-sm w-full bg-white  shadow-md rounded-lg overflow-hidden mx-auto'>
            <div class='w-2 bg-gray-800'></div>

            <div class='flex items-center px-2 py-3'>
                <form class="w-full max-w-lg">
                    <div class="block uppercase tracking-wide text-gray-700 text-xl font-bold mb-2">Home</div>
                    <div class="flex flex-wrap -mx-3 mb-3">
                        <!--  -->
                        <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                            <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                                for="grid-first-name">
                                Electricity
                            </label>
                            <input
                                class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-400 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"
                                id="grid-first-name" oninput="electricityConverter(this.value)"
                                onchange="electricityConverter(this.value)" type="number" placeholder="0">
                        </div>
                        <div class="w-full md:w-1/2 px-3">
                            <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                                for="grid-last-name">
                                LPG
                            </label>
                            <input
                                class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-400 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"
                                id="grid-last-name" oninput="lpgConverter(this.value)"
                                onchange="lpgConverter(this.value)" type="number" placeholder="0">
                        </div>
                        <!--  -->
                        <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                            <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                                for="grid-first-name">
                                In Kg Co2:
                            </label>
                            <div class="border border-gray-400 rounded py-3 px-4">
                                <p id="elec"> 0</p>
                            </div>

                        </div>
                        <div class="w-full md:w-1/2 px-3">
                            <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                                for="grid-last-name">
                                In Kg Co2:
                            </label>
                            <div class="border border-gray-400 rounded py-3 px-4">
                                <p id="lpg"> 0</p>
                            </div>
                        </div>
                        <!--  -->
                        <div class="w-full md:w-1/2 px-3 mt-4 md:mb-0">
                            <div class="border bg-black text-white border-gray-400 rounded py-3 px-4">Total
                                <span id="home-sum">0</span> ₹
                            </div>
                        </div>

                    </div>


                </form>
            </div>
        </div>
        <!-- Block-2 -->
        <div class='flex max-w-sm w-full bg-white shadow-md rounded-lg overflow-hidden mx-auto'>
            <div class='w-2 bg-gray-800'></div>

            <div class='flex items-center px-2 py-3'>
                <form class="w-full max-w-lg">
                    <div class="block uppercase tracking-wide text-gray-700 text-xl font-bold mb-2">OFFICE</div>
                    <div class="flex flex-wrap -mx-3 mb-3">
                        <!--  -->
                        <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                            <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                                for="grid-first-name">
                                Electricity
                            </label>
                            <input
                                class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-400 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"
                                id="grid-first-name" oninput="offConverter(this.value)"
                                onchange="offConverter(this.value)" type="number" placeholder="0">
                        </div>
                        <div class="w-full md:w-1/2 px-3">
                            <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                                for="grid-last-name">
                                PETROL
                            </label>
                            <input
                                class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-400 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"
                                id="grid-last-name" oninput="pet2Converter(this.value)"
                                onchange="pet2Converter(this.value)" type="number" placeholder="0">
                        </div>
                        <!--  -->
                        <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                            <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                                for="grid-first-name">
                                In Kg Co2:
                            </label>
                            <div class="border border-gray-400 rounded py-3 px-4">
                                <p id="off"> 0</p>
                            </div>

                        </div>
                        <div class="w-full md:w-1/2 px-3">
                            <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                                for="grid-last-name">
                                In Kg Co2:
                            </label>
                            <div class="border border-gray-400 rounded py-3 px-4">
                                <p id="pet2"> 0</p>
                            </div>
                        </div>
                        <!--  -->
                        <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                            <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                                for="grid-first-name">
                                Diesel
                            </label>
                            <input
                                class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-400 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"
                                id="grid-first-name" oninput="dis2Converter(this.value)"
                                onchange="dis2Converter(this.value)" type="number" placeholder="0">
                        </div>
                        <div class="w-full md:w-1/2 px-3">
                            <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                                for="grid-last-name">
                                In Kg Co2:
                            </label>
                            <div class="border border-gray-400 rounded py-3 px-4">
                                <p id="dis2"> 0</p>
                            </div>
                        </div>
                        <!--  -->
                        <div class="w-full md:w-1/2 px-3 mt-4 md:mb-0">
                            <div class="border bg-black text-white border-gray-400 rounded py-3 px-4">total
                                <span id="office-sum">0</span> ₹
                            </div>
                        </div>

                    </div>

                </form>
            </div>

        </div>

    </div>

    <div class="flex mt-7 justify-center"><button onclick="pay()"
            class="border bg-black text-white border-gray-400 rounded py-3 px-4">Total Amount
            <span id="total-sum">0</span> ₹</button></div>




    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>

        //for Electricity
        function electricityConverter(valNum) {
            valNum = parseFloat(valNum);
            document.getElementById("elec").innerHTML = (valNum * 0.9) ? (valNum * 0.9) : 0;
            addHome();
            addTotal();
        }

        //for Lpg
        function lpgConverter(valNum) {
            valNum = parseFloat(valNum);
            document.getElementById("lpg").innerHTML = (valNum * 42.5) ? (valNum * 42.5) : 0;
            addHome();
            addTotal();
        }

        //for Office electricityConverter
        function offConverter(valNum) {
            valNum = parseFloat(valNum);
            document.getElementById("off").innerHTML = (valNum * 0.9) ? (valNum * 0.9) : 0;
            addOffice();
            addTotal();
        }

        // for office petrol converter
        function pet2Converter(valNum) {
            valNum = parseFloat(valNum);
            document.getElementById("pet2").innerHTML = (valNum * 2.33) ? (valNum * 2.33) : 0;
            addOffice();
            addTotal();
        }

        //for office diesel
        function dis2Converter(valNum) {
            valNum = parseFloat(valNum);
            document.getElementById("dis2").innerHTML = (valNum * 2.68) ? (valNum * 2.68) : 0;
            addOffice();
            addTotal();
        }


        //to calculate sum 

        function addHome() {
            let a, b, c, d;
            a = Number(document.getElementById("elec").innerHTML);
            b = Number(document.getElementById("lpg").innerHTML);
            d = a + b;
            document.getElementById("home-sum").innerHTML = d;
        }

        function addOffice() {
            let a, b, c, d;
            a = Number(document.getElementById("dis2").innerHTML);
            b = Number(document.getElementById("pet2").innerHTML);
            c = Number(document.getElementById("off").innerHTML);
            d = a + b + c;
            document.getElementById("office-sum").innerHTML = d;
        }
        function addTotal() {
            let sum1 = Number(document.getElementById("home-sum").innerHTML);
            let sum2 = Number(document.getElementById("office-sum").innerHTML);
            let sum = sum1 + sum2;
            document.getElementById("total-sum").innerHTML = sum;
        }
        var params = {
            razorpay_order_id: "",
            razorpay_payment_id: "",
            razorpay_signature: ""
        }
        function pay() {
            let amount = Number(document.getElementById("total-sum").innerHTML);
            payment(amount)
        }
        async function payment(total) {
            let response = await fetch('/razorpay', {
                method: 'POST',
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ amount: total })
            });
            const data = await response.json();
            console.log(data)
            var options = {
                "key": "rzp_test_3wNdrQGujnrR49", // Enter the Key ID generated from the Dashboard
                "amount": data.amount.toString(), // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                "currency": "INR",
                "name": "Company Name",
                "description": "Payment",
                "image": "",
                "order_id": data.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
                "handler": function (response) {
                    // alert(response.razorpay_payment_id);
                    // alert(response.razorpay_order_id);
                    // alert(response.razorpay_signature);
                    params = {
                        razorpay_order_id: response.razorpay_order_id,
                        razorpay_payment_id: response.razorpay_payment_id,
                        razorpay_signature: response.razorpay_signature,
                    };
                    checkPayment().then(res => {
                        console.log(res)
                        alert(res.status);
                    });
                },
                "theme": {
                    "color": "#3399cc"
                }
            };
            var rzp1 = new Razorpay(options);
            rzp1.on('payment.failed', function (response) {
                // alert(response.error.code);
                // alert(response.error.description);
                // alert(response.error.source);
                // alert(response.error.step);
                // alert(response.error.reason);
                // alert(response.error.metadata.order_id);
                // alert(response.error.metadata.payment_id);
                checkPayment().then(res => {
                    console.log(res)
                    alert(res.status);
                });
            });
            rzp1.open();
            // document.getElementById('rzp-button1').onclick = function (e) {
            //     rzp1.open();
            //     e.preventDefault();
            // }
        }

        const checkPayment = async function (e) {
            const res = await fetch('/api/payment/verify', {
                method: "POST",
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(params)
            })
            const check = await res.json();
            return check;
        }


    </script>
</body>

</html>